name: Scan Images for Vulnerabilities (Trivy)
on:
  schedule:
    # TODO: Update this to run at `0 9 * * *` once we have a release.
    - cron: "15 12 * * *" # Every day @ 09:00 UTC, run Trivy scans against main
  workflow_dispatch:
    inputs:
      version:
        description: "Version of Eraser to run Trivy scans against. Set to `main` (default) to scan images built from the `main` branch."
        type: string
        required: true
        default: "main"

permissions: read-all

env:
  REGISTRY: ghcr.io

jobs:
  scan_vulnerabilities:
    name: Scan for vulnerabilities ${{ github.event_name == 'schedule' && '(scheduled)' }}
    runs-on: ubuntu-latest
    env:
      # Scanning released versions requires the project `eraser-dev` as part of the repo name.
      REGISTRY_POSTFIX: ${{ github.event.inputs.version == 'main' && '' || '/eraser-dev' }}
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09
        with:
          egress-policy: audit

      - name: Download Trivy
        run: |
          pushd $(mktemp -d)
          wget https://github.com/aquasecurity/trivy/releases/download/v${{ env.TRIVY_VERSION }}/trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          tar zxvf trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          echo "$(pwd)" >> $GITHUB_PATH
        env:
          TRIVY_VERSION: "0.45.0"

      - name: Check out code into the Go module directory
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Build Containers
        # We only build containers for runs wanting to scan main.
        if: github.event.inputs.version == 'main'
        # Setting their tag to `main` to make it easier to identify during the scanning steps.
        run: |
          echo "Build eraser-manager"
          make docker-build-manager MANAGER_REPO=${{ env.REGISTRY }}/manager MANAGER_TAG=main
          echo "Build remover"
          make docker-build-remover REMOVER_REPO=${{ env.REGISTRY }}/remover REMOVER_TAG=main
          echo "Build collector"
          make docker-build-collector COLLECTOR_REPO=${{ env.REGISTRY }}/collector COLLECTOR_TAG=main
          echo "Build trivy scanner"
          make docker-build-trivy-scanner TRIVY_SCANNER_REPO=${{ env.REGISTRY }}/trivy-scanner TRIVY_SCANNER_TAG=main

      - name: Scan remover for vulnerabilities
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}${{ env.REGISTRY_POSTFIX }}/remover:${{ github.event.inputs.version }}
      - name: Scan eraser-manager for vulnerabilities
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}${{ env.REGISTRY_POSTFIX }}/manager:${{ github.event.inputs.version }}
      - name: Scan collector for vulnerabilities
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}${{ env.REGISTRY_POSTFIX }}/collector:${{ github.event.inputs.version }}
      - name: Scan trivy-scanner for vulnerabilities
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}${{ env.REGISTRY_POSTFIX }}/trivy-scanner:${{ github.event.inputs.version }}
